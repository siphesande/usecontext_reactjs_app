[{"/home/sphe/usecontext_reactjs_app/src/index.js":"1","/home/sphe/usecontext_reactjs_app/src/reportWebVitals.js":"2","/home/sphe/usecontext_reactjs_app/src/App.js":"3","/home/sphe/usecontext_reactjs_app/src/components/EpisodeList.js":"4","/home/sphe/usecontext_reactjs_app/src/components/DetailedEpisodeInformation.js":"5","/home/sphe/usecontext_reactjs_app/src/context/GlobalState.js":"6","/home/sphe/usecontext_reactjs_app/src/context/AppReducer.js":"7","/home/sphe/usecontext_reactjs_app/src/components/AppBar.js":"8","/home/sphe/usecontext_reactjs_app/src/context/Types.js":"9","/home/sphe/usecontext_reactjs_app/src/components/styles.js":"10","/home/sphe/usecontext_reactjs_app/src/components/Loading.js":"11","/home/sphe/usecontext_reactjs_app/src/components/NothingToShow.js":"12"},{"size":610,"mtime":1611297048443,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611244460901,"results":"15","hashOfConfig":"14"},{"size":942,"mtime":1611348373738,"results":"16","hashOfConfig":"14"},{"size":1978,"mtime":1611349313358,"results":"17","hashOfConfig":"14"},{"size":3379,"mtime":1611347635086,"results":"18","hashOfConfig":"14"},{"size":1167,"mtime":1611319382192,"results":"19","hashOfConfig":"14"},{"size":456,"mtime":1611320329577,"results":"20","hashOfConfig":"14"},{"size":889,"mtime":1611347886966,"results":"21","hashOfConfig":"14"},{"size":90,"mtime":1611319035612,"results":"22","hashOfConfig":"14"},{"size":810,"mtime":1611347742660,"results":"23","hashOfConfig":"14"},{"size":228,"mtime":1611344685130,"results":"24","hashOfConfig":"14"},{"size":241,"mtime":1611345263999,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ya2dwj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/sphe/usecontext_reactjs_app/src/index.js",[],["53","54"],"/home/sphe/usecontext_reactjs_app/src/reportWebVitals.js",[],"/home/sphe/usecontext_reactjs_app/src/App.js",["55"],"import React, { useContext, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport EpisodeList from './components/EpisodeList';\nimport DetailedEpisodeInformation from './components/DetailedEpisodeInformation';\n//import { GlobalProvider } from './context/GlobalState';\nimport { GlobalContext } from './context/GlobalState';\nimport DenseAppBar from './components/AppBar'\n\n\n\nconst App = () => {\n  const { getEpisodes } = useContext(GlobalContext);\n\n  useEffect(() => {\n    getEpisodes();\n   \n  }, []);\n\n  \n  return (\n    \n      <div className=\"App\">\n        <Router>\n        <DenseAppBar />\n          <div className=\"container\">\n            <Route exact path=\"/\" component={EpisodeList} />\n            <Route exact path=\"/detailedepisodeinformation/:episode_id\" component={DetailedEpisodeInformation} />\n          </div>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","/home/sphe/usecontext_reactjs_app/src/components/EpisodeList.js",[],"/home/sphe/usecontext_reactjs_app/src/components/DetailedEpisodeInformation.js",["56"],"import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Loading from './Loading';\nimport NothingToShow from './NothingToShow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Card from '@material-ui/core/Card';\nimport useStyles from \"./styles\";\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst DetailedEpisodeInformation = (props) => {\n  const classes = useStyles();\n  const { episodes, loading } = useContext(GlobalContext);\n  let detailed_episode_array = episodes.filter(episodes_item => episodes_item.id == props.match.params.episode_id)\n\n  return (\n    \n      <div>\n        {loading ? (\n          <Loading />\n        ) : (\n            <div>\n\n              { detailed_episode_array.length === 0 ?\n                <NothingToShow />\n                :\n                <List className={classes.root}>\n                  {\n                    detailed_episode_array.map((episode_item) => (\n                      <ListItem\n                        className={classes.listItem}\n                        key={episode_item.id}\n                        alignItems=\"center\"\n                      >\n                        <Card className={classes.cardRoot}>\n                          <CardHeader\n                            avatar={\n                              <Avatar aria-label=\"episode\" className={classes.avatar}>\n                                {episode_item.number}\n                              </Avatar>\n                            }\n                            title={episode_item.name}\n                            subheader={episode_item.airdate}\n                          />\n                          <CardMedia\n                            className={classes.media}\n                            image={episode_item.image.original}\n                            title={episode_item.name}\n                          />\n                          <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                              <span dangerouslySetInnerHTML={{ __html: episode_item.summary }} />\n                            </Typography>\n                          </CardContent>\n                          <CardActions disableSpacing>\n                            <Button\n                              component={Link}\n                              to=\"/\"\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              startIcon={<ArrowBackIcon />}\n                            >\n                              Back\n                            </Button>\n                          </CardActions>\n\n                        </Card>\n                      </ListItem>\n                    ))\n                  }\n                </List>\n              }\n            </div>\n          )}\n      </div>\n  );\n};\n\nexport default DetailedEpisodeInformation;","/home/sphe/usecontext_reactjs_app/src/context/GlobalState.js",[],"/home/sphe/usecontext_reactjs_app/src/context/AppReducer.js",[],"/home/sphe/usecontext_reactjs_app/src/components/AppBar.js",[],"/home/sphe/usecontext_reactjs_app/src/context/Types.js",[],"/home/sphe/usecontext_reactjs_app/src/components/styles.js",[],"/home/sphe/usecontext_reactjs_app/src/components/Loading.js",[],"/home/sphe/usecontext_reactjs_app/src/components/NothingToShow.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":18,"column":6,"nodeType":"63","endLine":18,"endColumn":8,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":22,"column":82,"nodeType":"67","messageId":"68","endLine":22,"endColumn":84},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEpisodes'. Either include it or remove the dependency array.","ArrayExpression",["71"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [getEpisodes]",{"range":"74","text":"75"},[559,561],"[getEpisodes]"]