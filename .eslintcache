[{"/home/sphe/usecontext_reactjs_app/src/index.js":"1","/home/sphe/usecontext_reactjs_app/src/reportWebVitals.js":"2","/home/sphe/usecontext_reactjs_app/src/App.js":"3","/home/sphe/usecontext_reactjs_app/src/components/EpisodeList.js":"4","/home/sphe/usecontext_reactjs_app/src/components/DetailedEpisodeInformation.js":"5","/home/sphe/usecontext_reactjs_app/src/context/GlobalState.js":"6","/home/sphe/usecontext_reactjs_app/src/context/AppReducer.js":"7","/home/sphe/usecontext_reactjs_app/src/components/AppBar.js":"8","/home/sphe/usecontext_reactjs_app/src/context/Types.js":"9","/home/sphe/usecontext_reactjs_app/src/components/styles.js":"10","/home/sphe/usecontext_reactjs_app/src/components/Loading.js":"11","/home/sphe/usecontext_reactjs_app/src/components/NothingToShow.js":"12"},{"size":389,"mtime":1611390910468,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611244460901,"results":"15","hashOfConfig":"14"},{"size":853,"mtime":1611417624229,"results":"16","hashOfConfig":"14"},{"size":1981,"mtime":1611417133482,"results":"17","hashOfConfig":"14"},{"size":3473,"mtime":1611411639165,"results":"18","hashOfConfig":"14"},{"size":1167,"mtime":1611319382192,"results":"19","hashOfConfig":"14"},{"size":456,"mtime":1611320329577,"results":"20","hashOfConfig":"14"},{"size":872,"mtime":1611385925254,"results":"21","hashOfConfig":"14"},{"size":90,"mtime":1611319035612,"results":"22","hashOfConfig":"14"},{"size":811,"mtime":1611384667160,"results":"23","hashOfConfig":"14"},{"size":228,"mtime":1611344685130,"results":"24","hashOfConfig":"14"},{"size":241,"mtime":1611345263999,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ya2dwj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/sphe/usecontext_reactjs_app/src/index.js",[],["52","53"],"/home/sphe/usecontext_reactjs_app/src/reportWebVitals.js",[],"/home/sphe/usecontext_reactjs_app/src/App.js",["54"],"/home/sphe/usecontext_reactjs_app/src/components/EpisodeList.js",[],"/home/sphe/usecontext_reactjs_app/src/components/DetailedEpisodeInformation.js",["55"],"import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Loading from './Loading';\nimport NothingToShow from './NothingToShow';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport useStyles from \"./styles\";\n\nconst DetailedEpisodeInformation = (props) => {\n  const classes = useStyles();\n  const { episodes, loading } = useContext(GlobalContext);\n  const detailed_episode_array = episodes.filter(episodes_item => episodes_item.id == props.match.params.episode_id)\n\n  return (\n\n    <div>\n      {loading ? (\n        <Loading />\n      ) : (\n          <div>\n\n            { detailed_episode_array.length === 0 ?\n              <NothingToShow />\n              :\n              <List className={classes.root}>\n                {\n                  detailed_episode_array.map((episode_item) => (\n                    <ListItem\n                      className={classes.listItem}\n                      key={episode_item.id}\n                      alignItems=\"center\"\n                    >\n                      <Card className={classes.cardRoot}>\n                        <CardHeader\n                          avatar={\n                            <Avatar aria-label=\"episode\" className={classes.avatar}>\n                            {`${episode_item.number}`}\n                            </Avatar>\n                          }\n                          title={episode_item.name}\n                          subheader={episode_item.airdate}\n                        />\n                        <CardMedia\n                          className={classes.media}\n                          image={episode_item.image.original}\n                          title={episode_item.name}\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                            {`S ${episode_item.season} : E ${episode_item.number}`}\n                          </Typography>\n\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <span dangerouslySetInnerHTML={{ __html: episode_item.summary }} />\n                          </Typography>\n                        </CardContent>\n                        <CardActions disableSpacing>\n                          <Button\n                            component={Link}\n                            to=\"/\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<ArrowBackIcon />}\n                          >\n                            Back\n                          </Button>\n                        </CardActions>\n\n                      </Card>\n                    </ListItem>\n                  ))\n                }\n              </List>\n            }\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default DetailedEpisodeInformation;","/home/sphe/usecontext_reactjs_app/src/context/GlobalState.js",[],"/home/sphe/usecontext_reactjs_app/src/context/AppReducer.js",[],"/home/sphe/usecontext_reactjs_app/src/components/AppBar.js",[],"/home/sphe/usecontext_reactjs_app/src/context/Types.js",[],"/home/sphe/usecontext_reactjs_app/src/components/styles.js",[],"/home/sphe/usecontext_reactjs_app/src/components/Loading.js",[],"/home/sphe/usecontext_reactjs_app/src/components/NothingToShow.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":15,"column":6,"nodeType":"62","endLine":15,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":22,"column":84,"nodeType":"66","messageId":"67","endLine":22,"endColumn":86},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEpisodes'. Either include it or remove the dependency array.","ArrayExpression",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getEpisodes]",{"range":"73","text":"74"},[495,497],"[getEpisodes]"]